-- +goose Up
-- +goose StatementBegin
create table if not exists scudo.refresh_tokens (
    id integer primary key generated by default as identity,
    user_id uuid not null references scudo.users(id) on delete cascade,
    hashed_token text not null unique,
    expires_at timestamp with time zone not null,
    revoked bool not null default false,
    created_at timestamp with time zone not null default now(),
    updated_at timestamp with time zone not null default now()
);

create index idx_refresh_tokens_user_revoked_expires_at on scudo.refresh_tokens (user_id, revoked, expires_at);

create trigger refresh_tokens_update_updated_at
    before update on scudo.refresh_tokens
    for each row
execute function fn_update_updated_at_timestamp();
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
drop table if exists scudo.refresh_tokens;
-- +goose StatementEnd
